version: "3.4"

services:

  build:
    env_file:
      - .env
    container_name: ${APP_CONTAINER_NAME}
    build: 
      context: .
      dockerfile: gemp_app.Dockerfile
    image: gemp_app
    expose:
      - "80"
      - "8080"
    restart: always
    ports:
        # target means in the container
      - target: 80
        # published is what's on the host machine
        published: "${APP_PORT}"
        #These are the ports used for remote debugging the JRE
      - target: 8000
        published: 8052
    volumes:
       - type: bind
         source: ../gemp-lotr-async/src/main/web
         target: /etc/gemp-lotr/web
       - type: bind
         source: ../../gemp-lotr
         target: /etc/gemp-lotr
       - type: bind
         source: ../gemp-lotr-async/src/main/web
         target: /var/www/localhost/htdocs/gemp-lotr #/etc/apache2/htdocs/gemp-lotr
       - type: bind
         source: ../../logs
         target: /logs
       - type: bind
         source: ../../replay
         target: /replay
       - type: bind
         source: ../..
         target: /gemp-src
       - type: bind
         source: ../../logs/nohup.out
         target: /nohup.out
    networks:
      gemp_net_1:
        ipv4_address: ${APP_IP}
    tty: true
    command: nohup java -jar /etc/gemp-lotr/gemp-lotr-async/target/web.jar &

# This block is commented out, but it contains the full v2 UI confliguration. With this commented out none of the react app will be deployed
# with it enabled you can hit the v2 client at port 8080 
  # client: 
  #   image: gemp-client-v2
  #   build:
  #     context: ../v2-ui
  #     dockerfile: gemp_ui.Dockerfile
  #   container_name: gemp-v2-ui
  #   volumes:
  #       - ../v2-ui/client:/client
  #       - node_modules:/client/node_modules/
  #   ports:
  #       - "8080:17001"
  #   environment:
  #       - NODE_ENV=development
  #       - VITE_API=${APP_IP}
  #   links:
  #       - build
  #   networks:
  #     gemp_net_1:
  #       ipv4_address: ${V2_UI_IP}

  db:
    env_file:
      - .env
    container_name: ${DB_CONTAINER_NAME}
    build: 
      context: ..
      dockerfile: docker/gemp_db.Dockerfile
    image: gemp_db
    ports:
        # target means in the container
      - target: 3306
        # published is what's on the host machine
        published: "${DB_PORT}"
    restart: always
    volumes:
       - type: bind
         source: ../../database
         target: /var/lib/mysql
    networks:
      gemp_net_1:
        ipv4_address: ${DB_IP}
      
volumes:
  node_modules:

networks:
  gemp_net_1:
    ipam:
      driver: default
      config:
        - subnet: 172.28.1.0/24
    attachable: true
